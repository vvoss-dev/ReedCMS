ticket_id|status|title|layer|priority|complexity|depends_on|summary_reference|description
REED-01-01|Complete|Foundation Communication System|Foundation|Critical|High||ReedStream (Line 589-731)|Implement ReedStream universal communication interface with ReedRequest, ReedResponse, ReedResult, ReedError types and ReedModule trait
REED-01-02|Complete|Foundation Error System|Foundation|Critical|Medium|REED-01-01|ReedError Types (Line 602-624)|Implement comprehensive ReedError enum with all error variants and conversion patterns
REED-02-01|Complete|ReedBase Core Services|Data Layer|Critical|High|REED-01-01,REED-01-02|ReedBase Dispatcher (Line 746-749)|Implement ReedBase dispatcher with get/set/init operations and O(1) HashMap performance
REED-02-02|Complete|CSV Handler System|Data Layer|Critical|High|REED-01-01|CSV Handler Services (Line 973-976)|Implement universal CSV reader/writer for .reed/ file management with atomic operations
REED-02-03|Complete|Environment Fallback System|Data Layer|High|Medium|REED-02-01|Environment Override (Line 537-542)|Implement key@dev ' key fallback logic with environment resolution
REED-02-04|Complete|Backup System|Data Layer|High|Medium|REED-02-02|XZ Backup System (Line 308-333)|Implement automatic XZ compression backup before CSV modifications with 32-backup retention
REED-02-05|Complete|Matrix CSV Handler System|Data Layer|High|High|REED-02-02|Matrix CSV 4-Type System (Line 335-385)|Implement Matrix CSV handler with support for all 4 value types (single, list, modified, modified-list)
REED-02-06|Complete|Taxonomy System|Data Layer|Medium|High|REED-02-01,REED-02-02,REED-02-05|Universal Taxonomy (Line 399-450)|Implement hierarchical taxonomy system with universal entity tagging and usage analytics
REED-03-01|Complete|User Management System|Security Layer|High|High|REED-02-01,REED-02-05|Users Matrix CSV (Line 360-378)|Implement user management with Argon2 password hashing and extended profile data
REED-03-02|Complete|Role Permission System|Security Layer|High|High|REED-03-01|Roles Matrix CSV (Line 367-396)|Implement role-based permissions with Unix-style syntax and inheritance with circular detection
REED-04-01|Complete|CLI Command Foundation|CLI Layer|Critical|High|REED-01-01|CLI Architecture (Line 1032-1111)|Implement CLI command parser with colon notation and command routing system
REED-04-02|Complete|CLI Data Commands|CLI Layer|High|Medium|REED-04-01,REED-02-01|CLI Data Management (Line 1042-1050)|Implement set:text, set:route, set:meta, get:text, get:route, list:text commands with pattern matching
REED-04-03|Complete|CLI Layout Commands|CLI Layer|High|High|REED-04-01,REED-02-01|Layout Management (Line 1052-1055)|Implement init:layout with flag-based configuration and registry management
REED-04-04|Complete|CLI User Commands|CLI Layer|Medium|Medium|REED-04-01,REED-03-01,REED-03-02|User Management CLI (Line 1082-1090)|Implement user:create, user:list, user:update, user:delete, user:passwd, user:roles commands with Security API
REED-04-05|Complete|CLI Role Commands|CLI Layer|Medium|Medium|REED-04-01,REED-03-02|Role Management CLI (Line 1091-1098)|Implement role:create, role:list, role:update, role:delete, role:permissions commands with Security API
REED-04-06|Complete|CLI Taxonomy Commands|CLI Layer|Medium|Medium|REED-04-01,REED-02-06|Taxonomy CLI (Line 1099-1109)|Implement taxonomy:create, taxonomy:list, taxonomy:search, taxonomy:assign, taxonomy:update, taxonomy:delete, taxonomy:unassign, taxonomy:entities, taxonomy:usage commands with Taxonomy API
REED-04-07|Complete|CLI Migration Commands|CLI Layer|Medium|Medium|REED-04-01,REED-02-01|Migration Commands (Line 1056-1059)|Implement migrate:text, migrate:routes, validate:routes, validate:consistency, validate:text, validate:references commands
REED-04-08|Complete|CLI Build Commands|CLI Layer|Medium|High|REED-04-01|Build System CLI (Line 1063-1067)|Implement build:kernel, build:public, build:complete, build:watch commands
REED-04-09|Complete|CLI Server Commands|CLI Layer|High|Medium|REED-04-01|Server Management CLI (Line 1068-1076)|Implement server:io, server:start, server:stop, server:restart, server:status, server:logs commands
REED-04-10|Complete|CLI Agent Commands|CLI Layer|Medium|High|REED-04-01,REED-02-05|MCP Integration Foundation|Implement agent management CLI commands (add, list, test, remove) and basic content generation with MCP providers (Anthropic, OpenAI)
REED-04-11|Complete|CLI Man Page Documentation|CLI Layer|Medium|Low|REED-04-01,REED-04-02,REED-04-03,REED-04-04,REED-04-05,REED-04-06,REED-04-07,REED-04-08,REED-04-09,REED-04-10|Man Page System (Line 1032-1228)|Create comprehensive Unix/Linux man page documentation for reed CLI with ronn-based build system
REED-04-12|Open|Reed.toml Configuration System|CLI Layer|Medium|Medium|REED-04-01,REED-04-02,REED-02-01|Reed.toml Config (TBD)|Implement developer-facing Reed.toml configuration file with TOML to CSV sync using existing CLI commands
REED-05-01|Complete|Template Filter System|Template Layer|High|High|REED-02-01|Template Filters (Line 1256-1289)|Implement MiniJinja filters for text, route, meta, config with type-specific access
REED-05-02|Complete|Template Engine Setup|Template Layer|High|Medium|REED-05-01|MiniJinja Setup (Line 992-995)|Implement MiniJinja environment configuration with template loader and hot-reload
REED-05-03|Complete|Template Context Builder|Template Layer|Medium|Medium|REED-05-01,REED-02-01|Context Builder (Line 994)|Implement template context building with ReedBase data integration
REED-06-01|Complete|Server Foundation|Server Layer|Critical|High|REED-01-01|Server Services (Line 964-966)|Implement Actix-Web HTTP server with socket support and request handling
REED-06-02|Complete|Routing System|Server Layer|High|High|REED-06-01,REED-02-01|Request Router (Line 987-990)|Implement URL ' Layout + Language resolution via .reed/routes.csv
REED-06-03|Complete|Authentication Middleware|Server Layer|High|Medium|REED-06-01,REED-03-01|Authentication (Line 978)|Implement HTTP Basic Auth validation with user verification
REED-06-04|Open|Response Builder|Server Layer|Medium|Medium|REED-06-01,REED-05-02|Response Builder (Line 1002-1008)|Implement HTML generation with headers, cache control, security headers
REED-06-05|Complete|Client Detection Service|Server Layer|Medium|Medium|REED-06-01|Client Detection|Implement comprehensive client detection from screen_info cookie with ClientInfo structure, device detection, interaction mode resolution, and User-Agent fallback
REED-06-06|Complete|Language System Fix|Server Layer|Critical|Medium|REED-06-01,REED-06-02,REED-06-05|Language Routing (Line TBD)|Fixed language routing by storing path segments only in routes.csv and filtering route lookup by language parameter to ensure /de/wissen matches knowledge@de not knowledge@en
REED-07-01|Complete|ReedAPI HTTP Interface|API Layer|Medium|High|REED-06-01,REED-04-01|ReedAPI Layer (Line 875-954)|Implement RESTful API endpoints for ReedBase operations (GET/SET/LIST/BATCH) with JSON responses and AuthMiddleware integration
REED-07-02|Complete|API Security Matrix|API Layer|Medium|Medium|REED-07-01,REED-03-02|API Security (Line 890-933)|Implement resource-operation security matrix, sliding window rate limiting, API key management (SHA-256), and SecurityMiddleware for permission-based access control
REED-08-01|Complete|CSS Bundler|Asset Layer|Medium|Medium|REED-02-01|CSS Bundler (Line 998)|Implemented: Session hash strategy, on-demand bundling, component discovery, minification (60-70%), source maps v3. 24 functions, 7 modules, 17 tests. (2025-02-04)
REED-08-02|Complete|JS Bundler|Asset Layer|Low|Medium|REED-08-01|JS Bundler (Line 999)|Implemented: ES6/CommonJS dependency resolution, topological sorting, IIFE wrapping, tree shaking (~20%), minification (50-60%), source maps. 17 functions, 5 modules, reused 5 CSS functions. (2025-02-04)
REED-08-03|Complete|Static File Server|Asset Layer|Medium|Low|REED-06-01|Static Files (Line 1001)|ETag-based caching, gzip/brotli compression, build-time pre-compression, security headers, path traversal prevention. 20 functions, 39 tests, 6 new error variants. Routes: /static/{css,js,images,fonts,maps}/*
REED-09-01|Complete|Binary Compiler|Build Layer|High|High|REED-04-08|Binary Compiler (Line 1010)|Release build with LTO, symbol stripping, UPX compression, SHA256/MD5 checksums, tar.gz packaging, version management. 22 functions, 28 tests, Cargo.toml profiles configured. Binary: 15MB â†’ 6MB (UPX)
REED-09-02|Complete|Asset Pipeline|Build Layer|Medium|Medium|REED-08-01,REED-08-02,REED-09-01|Asset Pipeline (Line 1011)|Implement asset pipeline integration for CSS/JS bundling during build
REED-09-03|Complete|File Watcher|Build Layer|Medium|Medium|REED-09-01|File Watcher (Line 1012)|File watcher with intelligent change detection, 300ms debouncing, incremental rebuilds. Reuses bundle_css/bundle_js. 13 functions, 23 tests, notify dependency. (2025-02-04)
REED-10-01|Open|ReedMonitor Foundation|Monitor Layer|High|High|REED-01-01|ReedMonitor System (Line 786-870)|Implement FreeBSD-style logging with metrics collection and configurable output modes
REED-10-02|Open|Performance Profiler|Monitor Layer|Medium|Medium|REED-10-01|Performance Profiling (Line 842-870)|Implement automatic benchmark collection with p50/p95/p99 tracking
REED-10-03|Open|Debug Tools|Monitor Layer|Low|Medium|REED-10-01,REED-05-02|Debug Services (Line 967-969)|Implement template trace, performance profiler, error context, hot reload debug tools
REED-10-04|Open|Backup Recovery CLI|Monitor Layer|Medium|Low|REED-04-01,REED-02-04|Backup Recovery (Line 1077-1079)|Implement debug:backup list, restore, cleanup commands for XZ backup management
REED-11-01|Open|Hook System|Extension Layer|Medium|High|REED-04-10|Trigger-Based Automation|Implement event-driven hook system with triggers (after_set, after_create, etc.) and configurable actions
REED-11-02|Open|Workflow Engine|Extension Layer|Medium|High|REED-11-01|Workflow Automation|Implement YAML-based workflow definitions with multi-step automation and conditional execution
REED-11-03|Open|External API Bridges|Extension Layer|Low|Medium|REED-11-01,REED-04-10|Social Media Integration|Implement bidirectional bridges for Mastodon, Twitter/X, LinkedIn with automatic posting
REED-11-04|Open|Scheduled Tasks|Extension Layer|Low|Medium|REED-11-02|Cron-Style Scheduling|Implement cron-compatible task scheduling for automated workflows and maintenance tasks
REED-20-01|Open|MCP Server Library|Third-Party Integration|Medium|High|REED-04-10|MCP Protocol Implementation|Implement standalone MCP server library (reed-mcp-server) exposing ReedCMS as MCP tool provider for Claude Desktop, VS Code, and IDEs
REED-20-02|Open|VS Code Extension|Third-Party Integration|Medium|High|REED-20-01|VS Code Integration|Develop Visual Studio Code extension with sidebar panel, CSV editor, IntelliSense, AI integration, and live preview
REED-20-03|Open|Zed Extension|Third-Party Integration|Low|Medium|REED-20-01|Zed Editor Integration|Develop Zed editor extension with LSP support, Vim-mode commands, and performance-first architecture
REED-20-04|Open|JetBrains Extension|Third-Party Integration|Low|High|REED-20-01|JetBrains Platform Plugin|Develop JetBrains plugin for IntelliJ IDEA, WebStorm, PyCharm with tool window, refactoring, and visual CSV editor
REED-90-01|Open|Code Review|Quality Layer|High|High|REED-01-*,REED-02-*,REED-03-*,REED-04-*,REED-05-*,REED-06-*,REED-07-*,REED-08-*,REED-09-*|Code Review|Comprehensive code review of all implemented layers for quality, consistency, and best practices
REED-90-02|Open|Manual Documentation|Quality Layer|High|High|REED-90-01|Manual Documentation|Create comprehensive manual/ documentation for all layers with ASCII diagrams, Mermaid charts, minimal code examples, and didactic BBC English content
REED-18-00|Planned|CLI Layer Overview|CLI Layer (Presentation)|High|Low||CLI Architecture|Overview of ReedCLI presentation layer with 3-tier separation and Reed.toml registry system
REED-18-01|Complete|Command Parser|CLI Layer (Presentation)|Critical|Medium||Parser System|Parse CLI input with quoted strings, flags, and tool inference
REED-18-02|Complete|Registry Loader|CLI Layer (Presentation)|Critical|High|REED-18-01|Registry System|Load Reed.toml for dynamic command routing and tool discovery
REED-18-03|Complete|Adapter System|CLI Layer (Presentation)|High|High|REED-18-01,REED-18-02|CLI Adapters|Adapter system for integrating external Reed tools via Reed.toml configuration
REED-18-04|Complete|Tool Integration|CLI Layer (Presentation)|High|Medium|REED-18-02,REED-18-03|Tool Routing|Route commands to tool handlers dynamically with exit code handling
REED-18-05|Complete|Output Formatter|CLI Layer (Presentation)|High|Medium||Output Formatting|Format command output in table/JSON/CSV/plain formats
REED-18-06|Complete|Help System|CLI Layer (Presentation)|High|Low|REED-18-02|Help Generation|Auto-generate help from Reed.toml metadata
REED-18-07|Planned|Interactive Shell|CLI Layer (Presentation)|Medium|Medium|REED-18-01,REED-18-04|REPL Shell|Interactive shell with history and command completion
REED-19-00|Planned|ReedBase Layer Overview|ReedBase Layer (Data)|High|Low||Database Architecture|Overview of ReedBase standalone database with versioning and concurrent writes
REED-19-01|Planned|Registry & Dictionary|ReedBase Layer (Data)|Critical|Medium||Encoded Metadata|Dictionary system for integer-coded action/user metadata
REED-19-02|Planned|Universal Table API|ReedBase Layer (Data)|Critical|High|REED-19-01|Table Structure|Universal table API with current.csv + binary deltas + version.log
REED-19-03|Planned|Binary Delta Versioning|ReedBase Layer (Data)|High|High|REED-19-02|Delta System|Bsdiff binary deltas with XZ compression for 95% disk savings
REED-19-04|Planned|Encoded Log System|ReedBase Layer (Data)|Medium|Medium|REED-19-01,REED-19-03|Log Encoding|Integer-coded version logs for 50% smaller size and 5x faster parsing
REED-19-05|Planned|Concurrent Write System|ReedBase Layer (Data)|High|High|REED-19-02|Write Concurrency|File-based advisory locks with write queue for concurrent access
REED-19-06|Planned|Row-Level CSV Merge|ReedBase Layer (Data)|High|High|REED-19-05|Auto-Merge|Automatic row-level merge for non-conflicting concurrent writes
REED-19-07|Planned|Conflict Resolution|ReedBase Layer (Data)|Medium|Medium|REED-19-06|Conflict Handling|Multiple resolution strategies (LastWriteWins, FirstWriteWins, Manual, KeepBoth)
REED-19-08|Planned|Schema Validation|ReedBase Layer (Data)|High|Medium|REED-19-02|Schema System|TOML schemas with type checking and constraints
REED-19-09|Planned|Function System & Caching|ReedBase Layer (Data)|Medium|High|REED-19-02|Computed Columns|Rust functions for computed columns/aggregations with memoization cache
REED-19-10|Planned|CLI SQL Query Interface|ReedBase Layer (Data)|High|High|REED-19-02,REED-19-08,REED-19-09|ReedQL|SQL-like query language (CLI-only for security)
REED-19-11|Planned|Migration from REED-02|ReedBase Layer (Data)|High|Medium|REED-19-01,REED-19-02,REED-19-03,REED-19-04,REED-19-08|Data Migration|Migrate existing REED-02 data to new ReedBase format with rollback capability
REED-19-12|Planned|Performance Testing|ReedBase Layer (Data)|High|High|All REED-19|Benchmarking|Comprehensive benchmarking suite with regression detection
REED-19-13|Planned|Complete Documentation|ReedBase Layer (Data)|High|High|All REED-19|Documentation|Complete ReedBase documentation with user guide, API docs, and tutorials
